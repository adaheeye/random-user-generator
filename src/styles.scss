@use 'sass:map';
@use '@angular/material' as mat;
@import '../node_modules/@angular/material/theming';
@import 'theme';

/* You can add global styles to this file, and also import other style files */

// To read color values from a theme, you can use the get-color-config Sass function. This function returns a Sass map
// containing the theme's primary, accent, and warn palettes, as well as a flag indicating whether dark mode is set.
$color-config: mat.get-color-config($my-theme);
$primary: map.get($color-config, 'primary');
$accent:  map.get($color-config, 'accent');
$warn:    map.get($color-config, 'warn');
$is-dark-theme:   map.get($color-config, 'is-dark');

// To read typography values from a theme, you can use the get-typography-config Sass function. See the Typography guide
// for more information about the typography config data structure and for APIs for reading values from this config.
$typography-config: mat.get-typography-config($my-theme);
$my-font-family: mat.font-family($typography-config);

// The following 4 blocks allow us to have the footer always at bottom even when there's no enough content on the page.
html, body {
  height: 100%;
}

app-root {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.main {
  flex: 1;
}

body{
  background-color: mat.get-color-from-palette($primary, 100, 1);
}

footer {
  margin-top: auto;
  height: 150px;
  width: 100%;
  color: white;
  bottom: 0;
  padding: 50px;
  background: mat-color($primary);
}

.user-profile, user-profile-detail {
  border-color: mat.get-color-from-palette($primary, 500, 0.5) !important;
}

app-user-card {
  .icon  {
    color: mat.get-color-from-palette($primary, 900, 1) !important;
  }
}
